services:
  mariadb:
    build: requirements/mariadb/.
    image: mariadb:v0.1
    container_name: mariadb
    environment:
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    networks:
      - my-net
    volumes:
      - /home/ahanaf/data/database:/var/lib/mysql
  wordpress:
    build: requirements/wordpress/.
    image: wordpress:v0.1
    container_name: wordpress
    networks:
      - my-net 
    volumes:
      - /home/ahanaf/data/www:/var/www/html
    environment:
      URL: ${URL}
      TITLE: ${TITLE}
      WP_ADMIN_USER: ${WP_ADMIN_USER}
      WP_ADMIN_EMAIL: ${WP_ADMIN_EMAIL}
      WP_USER: ${WP_USER}
      WP_ROLE: ${WP_ROLE}
      WP_USER_EMAIL: ${WP_USER_EMAIL}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST_PORT: ${DB_HOST_PORT}
      DB_HOST: ${DB_HOST}
      REDIS_HOST: redis
      REDIS_PORT: 6379
  nginx:
    build: requirements/nginx/.
    image: nginx:v0.1
    container_name: nginx
    networks:
      - my-net
    volumes:
      - /home/ahanaf/data/www:/var/www/html
    ports:
      - "443:443"
  website:
    build: requirements/bonus/website/.
    image: website:v0.1
    container_name: website
    ports:
      - "3000:3000"
  adminer:
    build: requirements/bonus/adminer/.
    image: adminer:v0.1
    container_name: adminer
    ports:
      - "8080:8080"
    networks:
      - my-net

  redis:
    build:
      context: requirements/bonus/redis
      dockerfile: Dockerfile
    image: redis:v0.1
    container_name: redis
    restart: always
    networks:
      - my-net
    ports:
      - "6379:6379"
    volumes:
      - /home/ahanaf/data/redis:/data

networks:
  my-net:
    driver: bridge
